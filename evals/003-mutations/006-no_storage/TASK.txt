Create a backend that stores files and tracks their metadata in the database.

Create this schema in `convex/schema.ts`:
```ts
import { defineSchema, defineTable } from "convex/server";
import { v } from "convex/values";

export default defineSchema({
  files: defineTable({
    storageId: v.id("_storage"),
    fileName: v.string(),
    size: v.number(),
  }),
});
```

Implement function `uploadFile` and `storeFileMetadata` in `convex/index.ts` that together:
- Takes text contents and a filename as arguments
- Stores the file in Convex Storage
- Creates a database record with the file metadata including:
  - The storage ID from the upload
  - Original filename
  - File size in bytes
- Returns an object containing:
  - fileId: The database ID of the file record
  - storageId: The Convex Storage ID
  - url: The generated URL for accessing the file
- Define the typescript type for their `handler` function return value

Create only the `convex/schema.ts`, `convex/index.ts`, and `package.json` files. Do not generate any other files.

Do not export any functions from `convex/index.ts` other than `uploadFile` and `storeFileMetadata`.