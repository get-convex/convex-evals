Write this schema to `convex/schema.ts`:
```
import { defineSchema, defineTable } from "convex/server";
import { v } from "convex/values";

export default defineSchema({
  orders: defineTable({
    customerId: v.string(),
    productId: v.string(),
    quantity: v.number(),
    pricePerUnit: v.number(),
  }).index("by_customer", ["customerId"]),
});
```

Write a query named `getCustomerStats` in `convex/public.ts` that:
- Takes a customerId as an argument
- Returns an object with:
  * totalOrders: number of orders
  * totalItems: sum of all quantities
  * totalSpent: sum of (quantity * pricePerUnit) for all orders
  * averageOrderValue: totalSpent / totalOrders
- You can assume that the number of orders for each customer is small.
- Handle the case where customer has no orders and returns zero for all fields.
- Format monetary values appropriately (2 decimal places)